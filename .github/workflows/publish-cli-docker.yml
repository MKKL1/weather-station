name: Build and Publish CLI Docker Image

on:
  push:
    branches: [ main ]
    paths:
      - 'cli/**'
      - '.github/workflows/publish-cli-docker.yml'
    tags:
      - 'cli-v*'
  pull_request:
    branches: [ main ]
    paths:
      - 'cli/**'
      - '.github/workflows/publish-cli-docker.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/hw-cli

jobs:
  build-and-push:
    name: Build and Push CLI Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}},prefix=cli-v
            type=semver,pattern={{major}}.{{minor}},prefix=cli-v
            type=semver,pattern={{major}},prefix=cli-v
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=Heavy Weather CLI
            org.opencontainers.image.description=Command-line interface for Heavy Weather
            org.opencontainers.image.vendor=${{ github.repository_owner }}


      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./cli
          file: ./cli/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=1

      - name: Generate artifact attestation
        if: github.event_name != 'pull_request'
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true